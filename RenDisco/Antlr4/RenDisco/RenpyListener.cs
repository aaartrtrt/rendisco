//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./RenDisco/Renpy.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="RenpyParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IRenpyListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] RenpyParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] RenpyParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] RenpyParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] RenpyParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.label_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabel_def([NotNull] RenpyParser.Label_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.label_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabel_def([NotNull] RenpyParser.Label_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.character_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacter_def([NotNull] RenpyParser.Character_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.character_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacter_def([NotNull] RenpyParser.Character_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.scene_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScene_def([NotNull] RenpyParser.Scene_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.scene_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScene_def([NotNull] RenpyParser.Scene_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.pause_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPause_def([NotNull] RenpyParser.Pause_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.pause_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPause_def([NotNull] RenpyParser.Pause_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.play_music_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlay_music_def([NotNull] RenpyParser.Play_music_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.play_music_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlay_music_def([NotNull] RenpyParser.Play_music_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.stop_music_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStop_music_def([NotNull] RenpyParser.Stop_music_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.stop_music_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStop_music_def([NotNull] RenpyParser.Stop_music_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.jump_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJump_def([NotNull] RenpyParser.Jump_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.jump_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJump_def([NotNull] RenpyParser.Jump_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.call_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCall_def([NotNull] RenpyParser.Call_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.call_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCall_def([NotNull] RenpyParser.Call_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.menu_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMenu_def([NotNull] RenpyParser.Menu_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.menu_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMenu_def([NotNull] RenpyParser.Menu_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.menu_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMenu_option([NotNull] RenpyParser.Menu_optionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.menu_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMenu_option([NotNull] RenpyParser.Menu_optionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.default_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefault_def([NotNull] RenpyParser.Default_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.default_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefault_def([NotNull] RenpyParser.Default_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.return_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_def([NotNull] RenpyParser.Return_defContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.return_def"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_def([NotNull] RenpyParser.Return_defContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.dialogue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDialogue([NotNull] RenpyParser.DialogueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.dialogue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDialogue([NotNull] RenpyParser.DialogueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.narration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNarration([NotNull] RenpyParser.NarrationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.narration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNarration([NotNull] RenpyParser.NarrationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.character_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacter_ref([NotNull] RenpyParser.Character_refContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.character_ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacter_ref([NotNull] RenpyParser.Character_refContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.aguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAguments([NotNull] RenpyParser.AgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.aguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAguments([NotNull] RenpyParser.AgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] RenpyParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] RenpyParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.conditional_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditional_block([NotNull] RenpyParser.Conditional_blockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.conditional_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditional_block([NotNull] RenpyParser.Conditional_blockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.elif_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElif_block([NotNull] RenpyParser.Elif_blockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.elif_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElif_block([NotNull] RenpyParser.Elif_blockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.else_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElse_block([NotNull] RenpyParser.Else_blockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.else_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElse_block([NotNull] RenpyParser.Else_blockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] RenpyParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] RenpyParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RenpyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] RenpyParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RenpyParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] RenpyParser.ExpressionContext context);
}
